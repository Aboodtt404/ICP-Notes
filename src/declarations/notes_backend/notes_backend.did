type NoteVersion = record { content : text; updated_at : nat64; };
type Permission = variant { Read; Write; };
type Note = record {
  id: nat64;
  title: text;
  content: text;
  created_at: nat64;
  updated_at: nat64;
  owner: principal;
  versions: vec NoteVersion;
  shared_with: vec record { principal; Permission };
  is_markdown: bool;
};

service : {
  "add_note": (text, text) -> (nat64);
  "get_note": (nat64) -> (opt Note) query;
  "get_all_notes": () -> (vec Note) query;
  "update_note": (nat64, text, text) -> (opt Note);
  "delete_note": (nat64) -> (opt Note);
  "toggle_markdown": (nat64) -> (opt Note);
  "share_note": (nat64, principal, Permission) -> (opt Note);
  "revoke_access": (nat64, principal) -> (opt Note);
  "get_note_versions": (nat64) -> (variant { Ok: vec NoteVersion; Err: text }) query;
  "revert_to_version": (nat64, nat) -> (opt Note);
} 